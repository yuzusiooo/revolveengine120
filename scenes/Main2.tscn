[gd_scene load_steps=50 format=2]

[ext_resource path="res://assets/fonts/VCR_OSD_MONO_1.001.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://nodes/manager/ScoreboardManager.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/fonts/UI/DynFont_MultiplierLabel.tres" type="DynamicFont" id=3]
[ext_resource path="res://scripts/main/Main.gd" type="Script" id=4]
[ext_resource path="res://scripts/main/manager/WaveManager.gd" type="Script" id=5]
[ext_resource path="res://assets/themes/HUD.theme" type="Theme" id=6]
[ext_resource path="res://scripts/main/HUD.gd" type="Script" id=7]
[ext_resource path="res://assets/sprites/spr_ui_playerHealth.png" type="Texture" id=8]
[ext_resource path="res://scripts/main/manager/MainCamera.gd" type="Script" id=9]
[ext_resource path="res://scripts/main/manager/TimerManager.gd" type="Script" id=10]
[ext_resource path="res://assets/sprites/spr_ui_ammoIcon_gray.png" type="Texture" id=11]
[ext_resource path="res://scripts/main/manager/ItemDropManager.gd" type="Script" id=12]
[ext_resource path="res://assets/audio/managers/scoremanager/snd_combo_levelup.wav" type="AudioStream" id=13]
[ext_resource path="res://scripts/environment/Environment_Foreground.gd" type="Script" id=14]
[ext_resource path="res://assets/sprites/mask3.png" type="Texture" id=15]
[ext_resource path="res://assets/sprites/mask.png" type="Texture" id=16]
[ext_resource path="res://assets/sprites/mask4.png" type="Texture" id=17]
[ext_resource path="res://scripts/main/manager/ScoreManager.gd" type="Script" id=18]
[ext_resource path="res://scripts/main/manager/HitstopManager.gd" type="Script" id=19]
[ext_resource path="res://scripts/main/manager/GameoverManager.gd" type="Script" id=20]
[ext_resource path="res://assets/sprites/UI/UI_multiGauge.png" type="Texture" id=21]
[ext_resource path="res://nodes/ui/FinalScoreUI.tscn" type="PackedScene" id=22]
[ext_resource path="res://nodes/player/PlayerBase.tscn" type="PackedScene" id=23]

[sub_resource type="Environment" id=1]
background_mode = 4
tonemap_mode = 4
dof_blur_near_distance = 1.15
dof_blur_near_transition = 19.22
dof_blur_near_amount = 1.0
dof_blur_near_quality = 0
glow_enabled = true
glow_levels/5 = false
glow_strength = 0.33
glow_bloom = 0.3
glow_blend_mode = 1
adjustment_enabled = true
adjustment_contrast = 0.9
adjustment_saturation = 1.2

[sub_resource type="Shader" id=22]
code = "shader_type canvas_item;

uniform vec4 color : hint_color;
uniform float flash : hint_range(0.0, 1.0, 0.1);
uniform float flashRate = 10.0;

void fragment(){
	vec4 pixel = texture(TEXTURE, UV);
	COLOR = mix(pixel, color, flash * sin(TIME * flashRate + flash));
	COLOR.a *= pixel.a;
}"

[sub_resource type="ShaderMaterial" id=23]
shader = SubResource( 22 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/flash = 0.0
shader_param/flashRate = 10.0

[sub_resource type="Animation" id=37]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=38]
resource_name = "heartbeat"
loop = true
step = 0.0833333
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 0
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 0.583333, 0.666667, 0.75, 0.833333 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 1 ), Vector2( 0.8, 1.2 ), Vector2( 0.85, 1.25 ), Vector2( 1.2, 0.8 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Shader" id=19]
code = "shader_type canvas_item;
render_mode blend_premul_alpha;

uniform bool glow_on = false;
uniform float glow_width = 2.0;
uniform float glow_speed = 3.0;
uniform vec4 aura_color : hint_color;
uniform sampler2D glow_gradient;

void fragment(){
	vec4 col = texture(TEXTURE, UV);
	vec2 ps = TEXTURE_PIXEL_SIZE;
	float a;
	float maxa = col.a;
	float mina = col.a;
	float glow_width_timed = glow_width * sin(TIME * glow_speed);
	if (!glow_on){
		glow_width_timed = 0.0;
	}
	
	// set glow to 4 direction
	a = texture(TEXTURE, UV + vec2(0.0, -glow_width_timed) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);
	
	a = texture(TEXTURE, UV + vec2(0.0, glow_width_timed) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);
	
	a = texture(TEXTURE, UV + vec2(-glow_width_timed, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);
	
	a = texture(TEXTURE, UV + vec2(glow_width_timed, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);
	
	col.rgb *= col.a;
	COLOR = col;
	COLOR.rgb += aura_color.rgb * (maxa - mina);
}


//shader_type canvas_item;
//
//uniform float scale = 4.0;
//uniform sampler2D backgroundGradient;
//uniform vec2 scroll1 = vec2(1, 1);
//
//uniform sampler2D noise2;
//uniform float fireHeight:hint_range(0.0, 1.0);
//
//void fragment(){
//	vec2 textureUV = UV * scale;
//	vec4 texture1 = texture(TEXTURE, textureUV + TIME * scroll1);
//
//	vec2 noiseUV = textureUV;
//	vec4 noise1 = texture(noise2, noiseUV + TIME * (scroll1 * -1.0));
//
//	float energy = texture1.r + (noise1.r * 0.5) - (1.0 - UV.y) * fireHeight;
//
//	vec4 color = texture(backgroundGradient, vec2(energy));
//	COLOR = color;
//}"

[sub_resource type="GradientTexture" id=21]

[sub_resource type="ShaderMaterial" id=20]
shader = SubResource( 19 )
shader_param/glow_on = false
shader_param/glow_width = 3.0
shader_param/glow_speed = 5.0
shader_param/aura_color = Color( 0.921569, 0.592157, 0.168627, 0.690196 )
shader_param/glow_gradient = SubResource( 21 )

[sub_resource type="DynamicFont" id=18]
size = 20
extra_spacing_char = 2
font_data = ExtResource( 1 )

[sub_resource type="CanvasItemMaterial" id=24]
blend_mode = 1

[sub_resource type="Theme" id=17]

[sub_resource type="Shader" id=33]
code = "shader_type canvas_item;

uniform float offset = 1.0f;
uniform float CAStrength = 1.0f;
void fragment(){
	vec4 green_channel = texture(SCREEN_TEXTURE, SCREEN_UV);
	vec4 red_channel = texture(SCREEN_TEXTURE, vec2(SCREEN_UV.x + (offset * SCREEN_PIXEL_SIZE.x), SCREEN_UV.y));
	vec4 blue_channel = texture(SCREEN_TEXTURE, vec2(SCREEN_UV.x - (offset * SCREEN_PIXEL_SIZE.x), SCREEN_UV.y));
	if (offset != 0.0f){
		COLOR = vec4(red_channel.r * CAStrength, green_channel.g * CAStrength, blue_channel.b * CAStrength, 1.0f);
	}
}"

[sub_resource type="ShaderMaterial" id=34]
shader = SubResource( 33 )
shader_param/offset = 0.0
shader_param/CAStrength = 1.0

[sub_resource type="Shader" id=11]
code = "shader_type canvas_item;

uniform sampler2D gradient;
uniform sampler2D noise;

void fragment(){
	vec2 textureUV = UV;
	vec4 texture1 = texture(TEXTURE, textureUV);
	
	vec2 noiseUV = UV + (TIME * 0.05);
	vec4 noise1 = texture(noise, noiseUV);
	
	float energy = texture1.r / (noise1.r * 0.1);
	vec4 color = texture(gradient, vec2(energy));
	COLOR = color;
}"

[sub_resource type="Gradient" id=12]
offsets = PoolRealArray( 0.709677, 0.935484, 0.96129, 1 )
colors = PoolColorArray( 0, 0, 0, 0.839216, 0, 0.701599, 0.816406, 0.635659, 0.960784, 0.203922, 0, 0.831373, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=13]
gradient = SubResource( 12 )

[sub_resource type="OpenSimplexNoise" id=15]
octaves = 1
period = 0.1

[sub_resource type="NoiseTexture" id=16]
noise = SubResource( 15 )

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 11 )
shader_param/gradient = SubResource( 13 )
shader_param/noise = SubResource( 16 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform float scale = 4.0;


uniform vec2 scroll1 = vec2(1, 1);
uniform vec2 scroll2 = vec2(-1, -1);
uniform float scrollSpeed = 0.5;
uniform sampler2D colorTexture;
uniform sampler2D noise2;
uniform sampler2D noise3;

void fragment(){
	vec2 textureUV = UV * scale;
	vec4 texture1 = texture(TEXTURE, textureUV + TIME * scroll1 * scrollSpeed);
	
	vec2 noiseUV = textureUV;
	noiseUV.x += sin(TIME) * sin(noiseUV.y) * 0.2;
	vec4 noiseTexture = texture(noise2, noiseUV + TIME * scroll2 * scrollSpeed * 2.0);
	
	
	vec2 noiseSubtractorUV = textureUV;
	noiseSubtractorUV.x -= sin(TIME) * sin(noiseUV.y) * -0.2;
	vec4 noiseSubtractorTexture = texture(noise3, noiseSubtractorUV + TIME * scroll1 * scrollSpeed);
	
//	float energy = texture1.r * ((noiseTexture.r + noiseSubtractorTexture.r) * 0.5);
	float noiseEnergy = noiseTexture.r * 0.5;
	float energy = texture1.r * noiseEnergy;
	vec4 color = texture(colorTexture, vec2(energy));
	COLOR = color;
}"

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0.083871, 0.167742, 0.303226, 0.380645, 0.670968, 0.903226 )
colors = PoolColorArray( 0.0705882, 0.054902, 0.129412, 1, 0.227451, 0.0941176, 0.290196, 1, 0.0872803, 0.373511, 0.429688, 1, 0.269531, 0.0621185, 0.183649, 1, 0.227451, 0.0941176, 0.290196, 1, 0.0214272, 0.0450823, 0.133789, 1 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="OpenSimplexNoise" id=35]
period = 36.5
persistence = 0.113
lacunarity = 2.64

[sub_resource type="NoiseTexture" id=36]
noise = SubResource( 35 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 4 )
shader_param/scale = 6.0
shader_param/scroll1 = Vector2( 1, 2 )
shader_param/scroll2 = Vector2( -1, -1 )
shader_param/scrollSpeed = 0.05
shader_param/colorTexture = SubResource( 6 )
shader_param/noise2 = ExtResource( 15 )
shader_param/noise3 = SubResource( 36 )

[sub_resource type="ShaderMaterial" id=30]

[node name="Main" type="Node2D"]
position = Vector2( -1, 1 )
script = ExtResource( 4 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )

[node name="HUD" type="Control" parent="."]
margin_top = 16.0
margin_right = 640.0
margin_bottom = 121.0
script = ExtResource( 7 )

[node name="CanvasLayer" type="CanvasLayer" parent="HUD"]

[node name="FPSCounter" type="Label" parent="HUD/CanvasLayer"]
margin_right = 40.0
margin_bottom = 14.0
text = "FPS"

[node name="PlayerHP" type="Control" parent="HUD/CanvasLayer"]
margin_left = 24.0
margin_top = 32.0
margin_right = 192.0
margin_bottom = 64.0
theme = ExtResource( 6 )

[node name="Sprite" type="Sprite" parent="HUD/CanvasLayer/PlayerHP"]
material = SubResource( 23 )
position = Vector2( 16, 16 )
texture = ExtResource( 8 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="HUD/CanvasLayer/PlayerHP"]
autoplay = "heartbeat"
anims/RESET = SubResource( 37 )
anims/heartbeat = SubResource( 38 )

[node name="Label" type="Label" parent="HUD/CanvasLayer/PlayerHP"]
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = 40.0
margin_top = -16.0
margin_bottom = 16.0
text = "HP"
valign = 1

[node name="ParticleSpawnPoint" type="Position2D" parent="HUD/CanvasLayer/PlayerHP"]
position = Vector2( 17, 16 )

[node name="WeaponLevel" type="Control" parent="HUD/CanvasLayer"]
margin_left = 24.0
margin_top = 64.0
margin_right = 192.0
margin_bottom = 96.0
theme = ExtResource( 6 )

[node name="Label" type="Label" parent="HUD/CanvasLayer/WeaponLevel"]
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = 40.0
margin_top = -16.0
margin_bottom = 16.0
text = "LvlStr"
valign = 1

[node name="Sprite" type="Sprite" parent="HUD/CanvasLayer/WeaponLevel"]
material = SubResource( 20 )
position = Vector2( 16, 18 )
texture = ExtResource( 11 )

[node name="TimeLeft" type="Control" parent="HUD/CanvasLayer"]
anchor_left = 0.5
anchor_right = 0.5
margin_top = 24.0
margin_bottom = 24.0
theme = ExtResource( 6 )

[node name="Label" type="Label" parent="HUD/CanvasLayer/TimeLeft"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -130.0
margin_top = -15.0
margin_right = 130.0
margin_bottom = 15.0
text = "Time Left"
align = 1
valign = 1

[node name="Score" type="Control" parent="HUD/CanvasLayer"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -192.0
margin_top = 24.0
margin_right = -16.0
margin_bottom = 64.0
theme = ExtResource( 6 )

[node name="LabelAnchor" type="Control" parent="HUD/CanvasLayer/Score"]
margin_left = 88.0
margin_top = 16.0
margin_right = 88.0
margin_bottom = 16.0

[node name="Label" type="Label" parent="HUD/CanvasLayer/Score/LabelAnchor"]
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = -80.0
margin_top = -16.0
margin_right = 80.0
margin_bottom = 8.0
custom_fonts/font = SubResource( 18 )
text = "Score"
align = 1
valign = 1

[node name="TextureProgress" type="TextureProgress" parent="HUD/CanvasLayer/Score"]
self_modulate = Color( 0.0980392, 0.768627, 1, 1 )
material = SubResource( 24 )
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = 40.0
margin_top = 20.0
margin_right = -8.0
margin_bottom = 65.0
rect_scale = Vector2( 0.75, 0.539 )
value = 50.0
texture_progress = ExtResource( 21 )
fill_mode = 6
nine_patch_stretch = true

[node name="MutiAnchor" type="Control" parent="HUD/CanvasLayer/Score"]
margin_left = 88.0
margin_top = 40.0
margin_right = 88.0
margin_bottom = 40.0
grow_horizontal = 2
grow_vertical = 2

[node name="MultiplierLabel" type="Label" parent="HUD/CanvasLayer/Score/MutiAnchor"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -88.0
margin_top = -8.0
margin_right = 88.0
margin_bottom = 16.0
grow_horizontal = 2
grow_vertical = 2
theme = SubResource( 17 )
custom_fonts/font = ExtResource( 3 )
text = "MultiX"
align = 1
valign = 1

[node name="Managers" type="Node2D" parent="."]

[node name="TimerManager" type="Node2D" parent="Managers"]
script = ExtResource( 10 )

[node name="WaveManager" type="Node2D" parent="Managers"]
script = ExtResource( 5 )

[node name="SpawnPoint" type="Position2D" parent="Managers/WaveManager"]
position = Vector2( 375, 375 )

[node name="ItemDropManager" type="Node2D" parent="Managers"]
script = ExtResource( 12 )

[node name="ScoreManager" type="Node2D" parent="Managers"]
script = ExtResource( 18 )
ComboLevelUpSFX = ExtResource( 13 )

[node name="LevelUpSFX" type="AudioStreamPlayer" parent="Managers/ScoreManager"]
stream = ExtResource( 13 )

[node name="GameoverManager" type="Node2D" parent="Managers"]
script = ExtResource( 20 )

[node name="FinalScoreUI" parent="Managers/GameoverManager" instance=ExtResource( 22 )]

[node name="HitstopManager" type="Node2D" parent="Managers"]
script = ExtResource( 19 )
chromaticAbberation_Strength = 1.1

[node name="ChromaticAbberationBox" type="ColorRect" parent="Managers/HitstopManager"]
material = SubResource( 34 )
margin_right = 777.0
margin_bottom = 777.0
color = Color( 1, 1, 1, 0 )

[node name="ScoreboardManager" parent="Managers" instance=ExtResource( 2 )]

[node name="MainCamera" type="Camera2D" parent="."]
rotating = true
current = true
smoothing_enabled = true
editor_draw_limits = true
script = ExtResource( 9 )

[node name="Anchor" type="Position2D" parent="."]
position = Vector2( 375, 375 )

[node name="Environment" type="Node2D" parent="."]

[node name="Foreground" type="Node2D" parent="Environment"]
z_index = 10
script = ExtResource( 14 )

[node name="PlayareaBorder" type="Sprite" parent="Environment/Foreground"]
material = SubResource( 14 )
position = Vector2( 375, 375 )
texture = ExtResource( 17 )

[node name="Background" type="Control" parent="Environment"]
margin_right = 768.0
margin_bottom = 768.0

[node name="ParallaxBackground" type="ParallaxBackground" parent="Environment/Background"]
scroll_ignore_camera_zoom = true

[node name="ParallaxLayer" type="ParallaxLayer" parent="Environment/Background/ParallaxBackground"]
motion_scale = Vector2( 1.2, 1.2 )

[node name="Sprite" type="Sprite" parent="Environment/Background/ParallaxBackground/ParallaxLayer"]
material = SubResource( 7 )
position = Vector2( 392, 488 )
scale = Vector2( 10, 10 )
texture = ExtResource( 16 )

[node name="CenterLine" type="Control" parent="Environment/Background"]
modulate = Color( 1, 1, 1, 0.282353 )
material = SubResource( 30 )
margin_right = 768.0
margin_bottom = 768.0

[node name="Line2D" type="Line2D" parent="Environment/Background/CenterLine"]
position = Vector2( 0, -8 )
points = PoolVector2Array( 0, 384, 768, 384 )
width = 1.0
default_color = Color( 0.152941, 0.85098, 0.996078, 1 )

[node name="Line2D2" type="Line2D" parent="Environment/Background/CenterLine"]
points = PoolVector2Array( 376, 760, 376, -16 )
width = 1.0
default_color = Color( 0.152941, 0.85098, 0.996078, 1 )

[node name="Player" parent="." instance=ExtResource( 23 )]
position = Vector2( 384, 576 )
Anchor = NodePath("../Anchor")

[connection signal="timeLimit_met" from="Managers/TimerManager" to="Managers/GameoverManager" method="_on_TimerManager_timeLimit_met"]
[connection signal="recieved_finalscore" from="Managers/GameoverManager" to="Managers/ScoreboardManager" method="_on_GameoverManager_recieved_finalscore"]
[connection signal="replay_game" from="Managers/GameoverManager/FinalScoreUI" to="." method="_on_FinalScoreUI_replay_game"]
[connection signal="return_to_menu" from="Managers/GameoverManager/FinalScoreUI" to="." method="_on_FinalScoreUI_return_to_menu"]
[connection signal="player_dead" from="Player" to="Managers/GameoverManager" method="gameover"]
[connection signal="weapon_levelup" from="Player" to="HUD" method="set_WeaponLevelSprite"]
[connection signal="weapon_xpGain" from="Player" to="HUD" method="set_WeaponLevel"]
